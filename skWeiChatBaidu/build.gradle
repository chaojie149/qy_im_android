apply plugin: 'com.android.application'

buildscript {
    ext {
        appId = 'com.tongxin.qingyu02' // app的包名，
        channel = '云善绘' //打包的文件名，以及bugly上显示的渠道名，

        companyName = '云善绘' // 公司名，为空则没有关于页面，
        buglyAppId = '' // bugly配置的appId,
        baiduApiKey = '2YCQxbGampc7M1pFsKWNiwpS5F7RKVRt' // baidu地图配置的apiKey,
        googleApiKey = '' // google地图配置的apiKey,
        // 华为推送配置是个文件，skWeiChatBaidu/agconnect-services.json
        xiaomiAppId = '2882303761520158602' // 小米推送配置的appId,
        xiaomiAppKey = '5632015821602' // 小米推送配置的appKey,
        meizuAppId = '149166' // 魅族推送配置的appId,
        meizuAppKey = '4d51551b527245ed920c0137c9e370f8' // 魅族推送配置的appKey,
        vivoAppId = '105560969' // VIVO推送配置的appId,
        vivoAppKey = '98801eef0cf28e31f39654302942320d' // VIVO推送配置的appKey,
        oppoAppKey = '4a2d8fb31adf410e9541c9ae592d395d' // OPPO推送配置的appKey,
        oppoAppSecret = '930e6f188e16406ebe1f1c4cd4021446' // OPPO推送配置的secret,
        wechatAppId = '' // 微信相关的appId,
        qqAppId = '' // QQ相关的appId,
        phoneAuthSecret = ''
        // 新包配置阿里云实人认证需要更新sdk，老包却不能更新，否则无法使用，有新包需要配置时合并38015更新到4.6.2版本，
        // 阿里云实人认证的配置是个文件，\skWeiChatBaidu\src\main\res\drawable\yw_1222_0670.jpg
        baiduSpeechAppId = '' // baidu语音识别的AppId,
        baiduSpeechApiKey = '' // baidu语音识别的ApiKey,
        baiduSpeechSecretKey = '' // baidu语音识别的SecretKey,
        weboxMerchantId = ''// 云钱包商户id,

        buglyAppChannel = channel
        date = new Date().format("yyyyMMdd")
        buglyVersionNameSuffix = '' + '-' + date
    }
}
// 判断存在谷歌服务配置文件才启用谷歌服务，
def googleJson = file('google-services.json')
if (googleJson.exists() && googleJson.readLines().any { it.contains(appId) }) {
    apply plugin: 'com.google.gms.google-services'
}
// 判断存在华为服务配置文件才启用华为服务，
def huaweiJson = file('agconnect-services.json')
if (huaweiJson.exists() && huaweiJson.readLines().any { it.contains(appId) }) {
    apply plugin: 'com.huawei.agconnect'
}
android {
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    compileSdkVersion compile_version

    defaultConfig {
        applicationId appId
        versionCode 76
        versionName "2.1.8"
        minSdkVersion min_version
        targetSdkVersion target_version
        resConfigs "en", "zh","ur"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
        buildConfigField('String', "COMPANY_NAME", '"' + companyName + '"')
        buildConfigField('String', "BUGLY_APP_ID", '"' + buglyAppId + '"')
        buildConfigField('String', "BUGLY_APP_CHANNEL", '"' + buglyAppChannel + '"')
        buildConfigField('String', "XIAOMI_APP_ID", '"' + xiaomiAppId + '"')
        buildConfigField('String', "XIAOMI_APP_KEY", '"' + xiaomiAppKey + '"')
        buildConfigField('String', "MEIZU_APP_ID", '"' + meizuAppId + '"')
        buildConfigField('String', "MEIZU_APP_KEY", '"' + meizuAppKey + '"')
        buildConfigField('String', "OPPO_APP_KEY", '"' + oppoAppKey + '"')
        buildConfigField('String', "OPPO_APP_SECRET", '"' + oppoAppSecret + '"')
        buildConfigField('String', "GOOGLE_API_KEY", '"' + googleApiKey + '"')
        buildConfigField('String', "WECHAT_APP_ID", '"' + wechatAppId + '"')
        buildConfigField('String', "QQ_APP_ID", '"' + qqAppId + '"')
        buildConfigField('String', "PHONE_AUTH_SECRET", '"' + phoneAuthSecret + '"')
        buildConfigField('String', "WEBOX_MERCHANT_ID", '"' + weboxMerchantId + '"')
        manifestPlaceholders = [
                APP_ID                 : appId,
                BAIDU_API_KEY          : baiduApiKey,
                VIVO_APP_ID            : vivoAppId,
                VIVO_APP_KEY           : vivoAppKey,
                GOOGLE_API_KEY         : googleApiKey,
                QQ_APP_ID              : qqAppId,
                BAIDU_SPEECH_APP_ID    : baiduSpeechAppId,
                BAIDU_SPEECH_API_KEY   : baiduSpeechApiKey,
                BAIDU_SPEECH_SECRET_KEY: baiduSpeechSecretKey,
        ]

        resConfigs "en", "zh-rCN", "zh-rTW", "vi", "tl", "in"
    }
    packagingOptions {
        pickFirst 'lib/*/libc++_shared.so'
    }
    // so依赖根据功能拆分文件夹，
    sourceSets.main.jniLibs.srcDirs = [
            'src/main/jniLibs',
            'src/main/jniLibsBaiduMap',
            'src/main/jniLibsBaiduSpeech',
    ]
    // 高版本as中installRelease不会依赖assembleRelease也就不会复制apk,
    afterEvaluate {
        // 没配置签名的话，就没有installRelease，
        if (tasks.findByName('installRelease')) {
            installRelease.dependsOn 'assembleRelease'
        }
    }
    // 复制apk和mapping到项目中的release目录下，方便上传mapping到bugly,
    def releaseBuglyAppVersion = android.defaultConfig.versionName + buglyVersionNameSuffix
    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.assembleProvider.get().doLast {
                copy {
                    from variant.packageApplicationProvider.get().outputs.files.asFileTree.matching { include '**.apk' }.files
                    into "${rootDir}/release"
                    rename { String fileName ->
                        "$channel-$releaseBuglyAppVersion-${variant.name}.apk"
                    }
                }
                if (variant.mappingFile != null) {
                    copy {
                        from variant.mappingFile
                        into "${rootDir}/release"
                        rename { String fileName ->
                            "$channel-mapping-$releaseBuglyAppVersion-${variant.name}.txt"
                        }
                    }
                }
            }
        }
    }

    // multiDex的一些相关配置，这样配置可以让你的编译速度更快
    dexOptions {
        // 让它不要对Lib做preDexing
        preDexLibraries = false
        // 开启incremental dexing,优化编译效率，这个功能android studio默认是关闭的
        // incremental true
        // 增加java堆内存大小
        javaMaxHeapSize "4g"
    }

    // 单元测试用，
    testOptions {
        unitTests.returnDefaultValues = true
    }

    // 进行JAVA 的版本配置，使用对应版本的一些新特性
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            // 混淆文件位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField('String', "VERSION_NAME_SUFFIX", '"' + buglyVersionNameSuffix + '"')
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        debug {
            buildConfigField('String', "VERSION_NAME_SUFFIX", '"' + "-DEBUG" + '"')
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86"
            }
        }
    }
    bundle {
        // 是否分割多语言包
        language {
            enableSplit = false
        }

        // 是否分割资源
        density {
            enableSplit = true
        }

        // 是否分割二进制 so 包资源
        abi {
            enableSplit = true
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        // jitsi和imaging两个库都依赖fresco版本冲突了，
        if (details.requested.group == 'com.facebook.fresco') {
            details.useVersion '2.0.0'
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // 1.1.0会导致安卓5上webview崩溃，https://stackoverflow.com/a/58131421
    // 准确说是低版本webView的bug，普遍存在国产安卓5上，
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.squareup.okhttp3:okhttp:3.14.8'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'de.greenrobot:eventbus:3.0.0-beta1'

    implementation files('libs/BaiduLBS_Android.jar')
    implementation 'com.alibaba:fastjson:1.2.62'
    implementation files('libs/httpmime-4.2.jar')
    implementation files('libs/nineoldandroids.jar')
    implementation files('libs/ormlite-android-4.48.jar')
    implementation files('libs/ormlite-core-4.48.jar')
    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation files('libs/universal-image-loader-1.9.0.jar')

    // webox易支付的银行卡支付，
    implementation files('libs/liveness-silent-offline-cn-release-1.1.2.aar')
    implementation files('libs/webox_1.1.2-1.aar')
    implementation files('libs/services_1.0.4-1.1.2.aar')
    implementation "com.yanzhenjie:permission:2.0.0-rc1"
    implementation "org.greenrobot:eventbus:3.0.0"

    // 水印，
    implementation 'com.github.AurelionX:WaterMarkView:1.1.2'

    // 气泡滑动标签使用，
    implementation 'com.github.hackware1993:MagicIndicator:1.7.0'

    // 滑动验证码，
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    // 翻页横幅实现，
    implementation 'com.github.zhpanvip:BannerViewPager:3.1.6'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    // 评分，
    implementation 'com.github.ome450901:SimpleRatingBar:1.5.0'

    // 百度语音识别，
    implementation files('libs/bdasr_V3_20191210_81acdf5.jar')

    // 阿里云实人认证，
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation files('libs/rpsdk-4.0.0.aar')
    implementation files('libs/windvane-min-8.0.3.2.3.jar')
    implementation files('libs/oss-android-sdk-2.9.2.aar')
    implementation files('libs/SecurityBodySDK-external-release-5.4.112-preInstall.aar')
    implementation files('libs/SecurityGuardSDK-external-release-5.4.193-preInstall.aar')

    // 阿里云本机号码一键登录，
    implementation files('libs/phoneNumber-L-AuthSDK-2.11.1.aar')
    // QQ登录，
    implementation files('libs/open_sdk_r8353806_lite.jar')
    // 微信支付/分享，
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.0.2'
    // 支付宝 SDK AAR 包所需的配置
    implementation files('libs/alipaySdk-15.5.9-20181123210601.aar')

    // 小米推送，
    implementation files('libs/MiPush_SDK_Client_3_6_18.jar')
    // 华为推送，
    implementation 'com.huawei.hms:push:4.0.2.300'
    // 魅族推送，
    implementation 'com.meizu.flyme.internet:push-internal:3.8.1@aar'
    // vivo推送,
    implementation files('libs/vivopushsdk_v2.3.4.jar')
    // oppo推送，
    implementation files('libs/com.heytap.msp-push-2.1.0.aar')
    // firebase,
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'

    // 下拉刷新、视频播放、扫一扫
    implementation project(':pullToRefershLibraryMy')
    implementation project(':jcvideoplayer-lib')
    implementation project(':YZxing-lib')

    // 拍照录像
    // implementation project(path: ':cameralibrary')
    // implementation project(path: ':filterlibrary')
    implementation project(':OpenGLlibrary')
    //视频通话
    implementation files('libs/jitsi-meet-sdk-2.4.0-4.aar')
    implementation project(':meeting')
    //直播
    implementation project(':liveLibrary')
    implementation('com.github.AoEiuV020:jjdxm_ijkplayer:1.1.1') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.5.3'
    implementation 'tyrant:heartlayout:1.0.1'

    // 谷歌地图
    // 谷歌服务版本15依赖support-v4版本26
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    // 协议 protobuf socket
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.4'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.11.4'
    // implementation project(':protobufutil')
    //implementation files('libs/protobufutil-release.aar')

    // 视频缓存 + 视频处理
    implementation 'com.danikula:videocache:2.7.1'
    implementation 'com.github.yangjie10930:EpMedia:v0.9.5'
    // 图片压缩
    implementation 'top.zibin:Luban:1.1.3'
    // Bitmap二级缓存库
    implementation('com.github.chrisbanes.bitmapcache:library:2.3') {
        exclude group: 'com.google.android', module: 'support-v4'
    }

    // 数据库调试库，仅限debug包生效，
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    // bugly上报，没配置自动上传mapping，因为测试时自动上传mapping失败，
    implementation 'com.tencent.bugly:crashreport:4.0.0'
    // HTML解析器
    implementation 'org.jsoup:jsoup:1.10.3'
    // 角标
    implementation "me.leolin:ShortcutBadger:1.1.22"

    // gif
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'
    // 图片裁剪库，
    implementation 'com.github.yalantis:ucrop:2.2.4'
    // 图片编辑库
    implementation project(':image')
    // 流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    // 带header和footer的GridView
    implementation 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    // 仿ios按钮
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    // 带数字的进度条
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'

    // 靠谱点的圆形视图库
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation files('libs/xjgarsdklibrary-release-9.2.1-2019-08-31.aar')

    // 表格面板视图，https://github.com/ceryle/FitGridView
    implementation 'com.github.ceryle:FitGridView:v1.0.5'

    // 仿ios右划返回上一页，
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'

    // 支持侧滑的recyclerView,
    implementation project(':swiperecyclerview')
    // 下拉刷新布局，
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'

    // 密码学库，加密算法用到，
    implementation 'org.bouncycastle:bcprov-jdk15on:1.57'

    implementation 'com.huangyz0918:androidwm-light:0.1.2'
    implementation 'com.airbnb.android:lottie:3.4.2'
    implementation project(':appScreen')
}

configurations {
    all*.exclude group: 'xpp3', module: 'xpp3'
}

//apply from: rootProject.file('gradle/signing.gradle')
