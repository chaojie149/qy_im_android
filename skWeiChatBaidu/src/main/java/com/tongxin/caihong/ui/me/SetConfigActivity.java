package com.tongxin.caihong.ui.me;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.text.Editable;import android.text.TextUtils;import android.text.TextWatcher;import android.util.Log;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.FrameLayout;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.tongxin.caihong.adapter.BaseListAdapter;import com.tongxin.caihong.bean.ConfigBean;import com.tongxin.caihong.db.SQLiteHelper;import com.tongxin.caihong.service.customservice.CheckConfigService;import com.tongxin.caihong.sp.UserSp;import com.tongxin.caihong.ui.base.BaseActivity;import com.tongxin.caihong.util.AppUtils;import com.tongxin.caihong.util.PreferenceUtils;import com.tongxin.caihong.util.ToastUtil;import com.tongxin.caihong.util.ViewPiexlUtil;import com.tongxin.caihong.view.TipDialog;import com.tongxin.caihong.AppConfig;import com.tongxin.caihong.R;import com.tongxin.caihong.broadcast.OtherBroadcast;import com.tongxin.caihong.view.ClearEditText;import com.xuan.xuanhttplibrary.okhttp.HttpUtils;import com.xuan.xuanhttplibrary.okhttp.callback.BaseCallback;import com.xuan.xuanhttplibrary.okhttp.result.ObjectResult;import java.util.ArrayList;import java.util.Arrays;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Objects;import okhttp3.Call;import okhttp3.HttpUrl;/** * 配置服务器地址 */public class SetConfigActivity extends BaseActivity {    LayoutInflater mInflater;    TextView mTvSure;    ClearEditText mEditText;    ListView mListView;    private List<ConfigData> mdata;    private MyAdapter adapter;    private FrameLayout welcome_ly;    public SetConfigActivity() {        noLoginRequired();    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_setconfig);        initActionBar();        //  initResource();        welcome_ly = findViewById(R.id.welcome_ly);        welcome_ly.setOnTouchListener(new View.OnTouchListener() {            @Override            public boolean onTouch(View view, MotionEvent motionEvent) {                return true;            }        });        mInflater = LayoutInflater.from(this);        mEditText = (ClearEditText) findViewById(R.id.search_edit);        mListView = (ListView) findViewById(R.id.lv_setconfig);        mTvSure = (TextView) findViewById(R.id.tv_search_ok);        mTvSure.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                welcome_ly.setVisibility(View.VISIBLE);                String input = mEditText.getText().toString().trim();                try {                    input = Objects.requireNonNull(HttpUrl.parse(input)).uri().normalize().toString();                    String checkUrl =input.replace("/","").replace("/config","")+"/config";                    Map<String, String> params = new HashMap<>();                    String finalInput = input;                    HttpUtils.get().url(checkUrl)                            .params(params)                            .build(true, true)                            .execute(new BaseCallback<ConfigBean>(ConfigBean.class) {                                @Override                                public void onResponse(ObjectResult<ConfigBean> result) {                                    welcome_ly.setVisibility(View.GONE);                                    saveConfig(finalInput);                                }                                @Override                                public void onError(Call call, Exception e) {                                    welcome_ly.setVisibility(View.GONE);                                    Log.e(TAG, "onClick: 输入不合法 url = " + finalInput, e);                                    ToastUtil.showToast(mContext, "链接错误请联系客服");                                }                            });                } catch (Exception e) {                    welcome_ly.setVisibility(View.GONE);                    Log.e(TAG, "onClick: 输入不合法 url = " + input, e);                    ToastUtil.showToast(mContext, "链接错误请联系客服");                }            }        });        mEditText.addTextChangedListener(new TextWatcher() {            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {            }            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void afterTextChanged(Editable s) {                Log.e("xuan", "afterTextChanged: " + s.toString());                if (s.length() == 0) {//                    mEditText.setText("http://");                }            }        });        String address = PreferenceUtils.getString(mContext, "APP_SERVICE_CONFIG");        if (TextUtils.isEmpty(address)) {            address = AppConfig.CONFIG_URL;        }        // 兼容服务器地址结尾多了一个/config的情况，        address = removeSuffix(address, "/config");        // 兼容服务器地址结尾多了一个斜杠/的情况，        address = removeSuffix(address, "/");        mEditText.setText(address);        initDatas();    }    private String removeSuffix(final String s, final String suffix) {        if (s != null && suffix != null && s.endsWith(suffix)) {            return s.substring(0, s.length() - suffix.length());        }        return s;    }    private void initActionBar() {        getSupportActionBar().hide();        findViewById(R.id.iv_title_left).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });        TextView tvTitle = (TextView) findViewById(R.id.tv_title_center);        tvTitle.setText(R.string.change_server_address);        TextView tvRight = (TextView) findViewById(R.id.tv_title_right);        tvRight.setText(R.string.clean);        tvRight.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                cleanList();            }        });    }    private void saveConfig(final String str) {        boolean repeat = false;        for (ConfigData s : mdata) {            if (str.equals(s.url)) {                repeat = true;            }        }        if (!repeat) {            mdata.add(0, new ConfigData(1,"线路"+(mdata.size()+1),str));        }        saveList(mdata);        TipDialog tipDialog = new TipDialog(this);        tipDialog.setmConfirmOnClickListener(getString(R.string.tip_reboot_for_config), new TipDialog.ConfirmOnClickListener() {            @Override            public void confirm() {                for (ConfigData temp :mdata){                    temp.isSelect= false;                }                mdata.get(0).isSelect=true;                AppConfig.saveConfigUrl(mContext, str);//                UserSp.getInstance(mContext).clearUserInfo();//                SQLiteHelper.rebuildDatabase(mContext);                //发送广播  重新拉起app                Intent intent = new Intent(OtherBroadcast.BROADCASTTEST_ACTION);                intent.setComponent(new ComponentName(AppConfig.sPackageName, AppConfig.myBroadcastReceiverClass));                sendBroadcast(intent);            }        });        tipDialog.show();    }    private List<ConfigData> getDefaultList() {//        if (AppUtils.isApkDebug(mContext)) {            List<ConfigData> list = new ArrayList<>();            for (ConfigData temp : AppConfig.ROUTE_LINE){                list.add(temp);            }            return list;//        } else {//            return new ArrayList<>();//        }    }    private void initDatas() {        String str = PreferenceUtils.getString(this, "APP_LIST_CONFIG", null);        if (str == null) {            mdata = getDefaultList();        } else {            mdata = initList(str);        }        adapter = new MyAdapter(this);        // 绑定适配器        mListView.setAdapter(adapter);        adapter.setDatas(mdata);        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                mEditText.setText(mdata.get(position).url);            }        });    }    private void cleanList() {        PreferenceUtils.putString(this, "APP_LIST_CONFIG", null);        Intent serviceIntent = new Intent(mContext, CheckConfigService.class);        startService(serviceIntent);        mdata=getDefaultList();        adapter.setDatas(mdata);    }    private List<ConfigData> initList(String str) {        List<ConfigData> data = new ArrayList<>();        JSONArray js = JSONArray.parseArray(str);        for (int i = 0; i < js.size(); i++) {            ConfigData ss = new ConfigData(((JSONObject)js.get(i)).getString("url"));            ss.isSelect = ((JSONObject)js.get(i)).getBoolean("isSelect");            ss.name = ((JSONObject)js.get(i)).getString("name");            ss.status = ((JSONObject)js.get(i)).getInteger("status");            data.add(ss);        }        return data;    }    private void saveList(List<ConfigData> data) {        if (data == null || data.size() == 0) {            return;        }         String sb = JSON.toJSONString(data);//        StringBuilder sb = new StringBuilder();//        sb.append("[");//        for (int i = 0; i < data.size(); i++) {//            sb.append("\"");//            sb.append(data.get(i));//            sb.append("\"");//            sb.append(",");//        }//        sb.deleteCharAt(sb.length() - 1);//        sb.append("]");        Log.e("xuan", " " + sb.toString());        PreferenceUtils.putString(this, "APP_LIST_CONFIG", sb.toString());    }    public static class ConfigData{        // 0 未测试  1 测试成功 2 测试失败        public int status;        public String name;        public String url;        public boolean isSelect = false;        public ConfigData(String url) {            this.url = url;        }        public ConfigData(String name, String url) {            this.name = name;            this.url = url;        }        public ConfigData(int status, String name, String url) {            this.status = status;            this.name = name;            this.url = url;        }    }    class MyAdapter extends BaseListAdapter<ConfigData> {        MyAdapter(Context ctx) {            super(ctx);        }        @Override        public View getView(int position, View convertView, ViewGroup parent) {            ViewHolder holder;            if (convertView == null) {                convertView = mInflater.inflate(R.layout.item_server_address, parent, false);                holder = new ViewHolder();                holder.tvTitle = (TextView) convertView.findViewById(R.id.tv_item_number);                holder.bg = (LinearLayout) convertView.findViewById(R.id.status);                convertView.setTag(holder);            } else {                holder = (ViewHolder) convertView.getTag();            }            int height = ViewPiexlUtil.dp2px(SetConfigActivity.this, 40);            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, height);/*            if (position == mdata.size() - 1) {                holder.tvTitle.setText(getString(R.string.default_place_holder, mdata.get(position)));            } else {                holder.tvTitle.setText(mdata.get(position));            }*/            holder.tvTitle.setText(mdata.get(position).name);            holder.tvTitle.setLayoutParams(params);            try {                switch (mdata.get(position).status) {                    case 0:                        holder.bg.setBackground(mContext.getDrawable(R.drawable.line_circle_gray));                        break;                    case 1:                        holder.bg.setBackground(mContext.getDrawable(R.drawable.line_circle_green));                        break;                    case 2:                        holder.bg.setBackground(mContext.getDrawable(R.drawable.line_circle_red));                        break;                }            }catch (Exception e ){            }            return convertView;        }    }    class ViewHolder {        TextView tvTitle;        LinearLayout bg;    }}