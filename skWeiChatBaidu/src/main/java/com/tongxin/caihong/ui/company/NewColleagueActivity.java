package com.tongxin.caihong.ui.company;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.text.TextUtils;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.tongxin.caihong.bean.Friend;import com.tongxin.caihong.bean.message.ChatMessage;import com.tongxin.caihong.helper.AvatarHelper;import com.tongxin.caihong.util.TimeUtils;import com.tongxin.caihong.util.ToastUtil;import com.tongxin.caihong.R;import com.tongxin.caihong.db.dao.ChatMessageDao;import com.tongxin.caihong.db.dao.FriendDao;import com.tongxin.caihong.ui.base.BaseActivity;import com.tongxin.caihong.ui.tool.ButtonColorChange;import com.xuan.xuanhttplibrary.okhttp.HttpUtils;import com.xuan.xuanhttplibrary.okhttp.callback.BaseCallback;import com.xuan.xuanhttplibrary.okhttp.result.ObjectResult;import com.xuan.xuanhttplibrary.okhttp.result.Result;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import de.greenrobot.event.EventBus;import fm.jiecao.jcvideoplayer_lib.MessageEvent;import okhttp3.Call;/** * 新的同事 */public class NewColleagueActivity extends BaseActivity {    private NewColleagueAdapter adapter;    private List<ChatMessage> data = new ArrayList<>();    private ChatMessage cSelectChatMessage;    public static void start(Context ctx) {        Intent intent = new Intent(ctx, NewColleagueActivity.class);        ctx.startActivity(intent);    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_company_new_colleague);        initActionBar();        initData();        initView();    }    private void initActionBar() {        getSupportActionBar().hide();        findViewById(R.id.iv_title_left).setOnClickListener(v -> finish());        TextView tvTitle = findViewById(R.id.tv_title_center);        tvTitle.setText(getString(R.string.new_colleague));    }    private void initData() {        data = ChatMessageDao.getInstance().getOneGroupChatMessages(data                , coreManager.getSelf().getUserId()                , Friend.ID_SYSTEM_COLLEAGUE_NOTIFICATION                , TimeUtils.sk_time_current_time()                , 100);    }    private void initView() {        RecyclerView ryNewColleague = findViewById(R.id.ryNewColleague);        ryNewColleague.setLayoutManager(new LinearLayoutManager(mContext));        adapter = new NewColleagueAdapter();        ryNewColleague.setAdapter(adapter);    }    private void passApply(String departmentId) {        Map<String, String> params = new HashMap<>();        params.put("companyId", cSelectChatMessage.getObjectId());        params.put("departmentId", departmentId);        params.put("joinUserId", cSelectChatMessage.getFromUserId());        HttpUtils.get().url(coreManager.getConfig().ORG_COMPANY_MANAGER_CONFIRM_JOIN)                .params(params)                .build()                .execute(new BaseCallback<Void>(Void.class) {                    @Override                    public void onResponse(ObjectResult<Void> result) {                        if (Result.checkSuccess(mContext, result)) {                            ToastUtil.showToast(mContext, getString(R.string.success));                            EventBus.getDefault().post(new MessageEvent("Update"));// 数据有更新                            cSelectChatMessage.setDownload(true);                            adapter.notifyDataSetChanged();                            ChatMessageDao.getInstance().updateServiceGradeMessageStatus(coreManager.getSelf().getUserId()                                    , Friend.ID_SYSTEM_COLLEAGUE_NOTIFICATION                                    , cSelectChatMessage.getPacketId()                                    , true);                        }                    }                    @Override                    public void onError(Call call, Exception e) {                        ToastUtil.showErrorNet(mContext);                    }                });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == ChangeEmployeeDepartment.REQUEST_SELECT_DEPARTMENT                && resultCode == RESULT_OK && data != null) {            String departmentId = data.getStringExtra("departmentId");            passApply(departmentId);        }    }    class NewColleagueAdapter extends RecyclerView.Adapter<NewColleagueHolder> {        public NewColleagueAdapter() {        }        @NonNull        @Override        public NewColleagueHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {            return new NewColleagueHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_company_new_colleague, parent, false));        }        @Override        public void onBindViewHolder(@NonNull NewColleagueHolder holder, int position) {            ChatMessage chatMessage = data.get(position);            if (chatMessage != null) {                AvatarHelper.getInstance().displayAvatar(chatMessage.getFromUserId(), holder.ivHead, true);                String name;                Friend friend = FriendDao.getInstance().getFriend(coreManager.getSelf().getUserId(), chatMessage.getFromUserId());                if (friend != null) {                    name = friend.getShowName();                } else {                    name = chatMessage.getFromUserName();                }                holder.tvName.setText(getString(R.string.apply_join, name, chatMessage.getFilePath()));                if (!TextUtils.isEmpty(chatMessage.getContent())) {                    holder.tvContent.setText(chatMessage.getContent());                } else {                    holder.tvContent.setText("");                }                holder.tvApplyTime.setText(TimeUtils.skNearbyTimeString(chatMessage.getTimeSend() / 1000));                holder.btnPassApply.setVisibility(chatMessage.isDownload() ? View.GONE : View.VISIBLE);            }        }        @Override        public int getItemCount() {            return data.size();        }    }    class NewColleagueHolder extends RecyclerView.ViewHolder {        ImageView ivHead;        TextView tvName;        TextView tvContent;        TextView tvApplyTime;        Button btnPassApply;        NewColleagueHolder(View itemView) {            super(itemView);            ivHead = itemView.findViewById(R.id.ivHead);            tvName = itemView.findViewById(R.id.tvName);            tvContent = itemView.findViewById(R.id.tvContent);            tvApplyTime = itemView.findViewById(R.id.tvApplyTime);            btnPassApply = itemView.findViewById(R.id.btnPassApply);            ButtonColorChange.colorChange(mContext, btnPassApply, R.drawable.bg_company_search_join);            btnPassApply.setOnClickListener(view -> {                cSelectChatMessage = data.get(getAdapterPosition());                ChangeEmployeeDepartment.start(NewColleagueActivity.this, cSelectChatMessage.getObjectId());            });        }    }}