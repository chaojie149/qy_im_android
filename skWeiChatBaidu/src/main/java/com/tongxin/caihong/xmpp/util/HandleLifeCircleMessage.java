package com.tongxin.caihong.xmpp.util;import android.text.TextUtils;import android.util.Log;import com.tongxin.caihong.audio.NoticeVoicePlayer;import com.tongxin.caihong.bean.MyZan;import com.tongxin.caihong.bean.event.MessageEventHongdian;import com.tongxin.caihong.bean.message.ChatMessage;import com.tongxin.caihong.bean.message.XmppMessage;import com.tongxin.caihong.db.dao.MyZanDao;import com.tongxin.caihong.ui.circle.MessageEventNotifyDynamic;import de.greenrobot.event.EventBus;/** * @author zq * 处理生活圈消息 */public class HandleLifeCircleMessage {    public static void handleMessage(String mLoginUserId, ChatMessage chatMessage) {        if (chatMessage.getType() == XmppMessage.FRIEND_PUBLISH) {            EventBus.getDefault().post(new MessageEventHongdian(-1));            EventBus.getDefault().post(new MessageEventNotifyDynamic(-1));            NoticeVoicePlayer.getInstance().start();            return;        }        if (MyZanDao.getInstance().hasSameZan(chatMessage.getPacketId())) {            Log.e("msg", "本地已存在该条赞或评论消息");            return;        }        MyZan zan = new MyZan();        zan.setFromUserId(chatMessage.getFromUserId());        zan.setFromUsername(chatMessage.getFromUserName());        zan.setSendtime(String.valueOf(chatMessage.getTimeSend()));        zan.setLoginUserId(mLoginUserId);        zan.setZanbooleanyidu(0);        zan.setSystemid(chatMessage.getPacketId());        /**         * object组成: id,type,content         *         * id         * type:1 文本 2 图片 3 语音 4 视频         * content:文本内容         */        String[] data = chatMessage.getObjectId().split(",");        zan.setCricleuserid(data[0]);        zan.setType(Integer.parseInt(data[1]));        if (Integer.parseInt(data[1]) == 1) {// 文本类型            zan.setContent(data[2]);        } else {// 其他类型            zan.setContenturl(data[2]);        }        if (chatMessage.getType() == XmppMessage.DIANZAN) {// 赞            zan.setHuifu("101");            if (MyZanDao.getInstance().addZan(zan)) {                int size = MyZanDao.getInstance().getZanSize(mLoginUserId);                EventBus.getDefault().post(new MessageEventHongdian(size));                EventBus.getDefault().post(new MessageEventNotifyDynamic(size));            } else {                // 针对该条说说fromUserId已经点赞过一次了，就不重复提醒了，需要Return掉，继续往下走会有提示音                return;            }        } else if (chatMessage.getType() == XmppMessage.R_DIANZAN) {// 取消赞            // 这样会将评论也删掉，仅删除赞            // MyZanDao.getInstance().deleteZan(zan.getLoginUserId(), zan.getFromUserId(), zan.getCricleuserid());            MyZanDao.getInstance().deleteZanOlnyPraise(zan.getLoginUserId(), zan.getFromUserId(), zan.getCricleuserid());            int size = MyZanDao.getInstance().getZanSize(mLoginUserId);            EventBus.getDefault().post(new MessageEventHongdian(size));            EventBus.getDefault().post(new MessageEventNotifyDynamic(size));            return;        } else if (chatMessage.getType() == XmppMessage.PINGLUN) {// 评论            if (chatMessage.getContent() != null) {                zan.setHuifu(chatMessage.getContent());            }            if (!TextUtils.isEmpty(chatMessage.getToUserName())) {                zan.setTousername(chatMessage.getToUserName());            }            MyZanDao.getInstance().addZan(zan);            int size = MyZanDao.getInstance().getZanSize(mLoginUserId);            EventBus.getDefault().post(new MessageEventHongdian(size));            EventBus.getDefault().post(new MessageEventNotifyDynamic(size));        } else if (chatMessage.getType() == XmppMessage.ATMESEE) {// 提醒我看            zan.setHuifu("102");            MyZanDao.getInstance().addZan(zan);            int size = MyZanDao.getInstance().getZanSize(mLoginUserId);            EventBus.getDefault().post(new MessageEventHongdian(size));            EventBus.getDefault().post(new MessageEventNotifyDynamic(size));        }        NoticeVoicePlayer.getInstance().start();    }}