package com.tongxin.caihong.xmpp.helloDemon;import android.content.Context;import android.util.Log;import com.tongxin.caihong.MyApplication;import com.heytap.msp.push.HeytapPushManager;import com.heytap.msp.push.callback.ICallBackResultService;import com.heytap.msp.push.service.DataMessageCallbackService;import com.tongxin.caihong.BuildConfig;import com.tongxin.caihong.Reporter;import com.tongxin.caihong.ui.base.CoreManager;import com.xuan.xuanhttplibrary.okhttp.HttpUtils;import com.xuan.xuanhttplibrary.okhttp.callback.BaseCallback;import com.xuan.xuanhttplibrary.okhttp.result.ObjectResult;import okhttp3.Call;public class OppoPushServiceAndroidQ extends DataMessageCallbackService {    private static final String TAG = "OppoPushServiceAndroidQ";    public static void init(Context ctx) {        if (!HeytapPushManager.isSupportPush()) {            return;        }        HeytapPushManager.register(ctx, BuildConfig.OPPO_APP_KEY, BuildConfig.OPPO_APP_SECRET, new ICallBackResultService() {            @Override            public void onRegister(int i, String s) {                if (i == 0) {                    putRegId(CoreManager.requireSelfStatus(ctx).accessToken, s);                } else {                    Log.e("zx", "onRegister: " + "注册失败: " + i);                }            }            @Override            public void onUnRegister(int i) {            }            @Override            public void onSetPushTime(int i, String s) {            }            @Override            public void onGetPushStatus(int i, int i1) {            }            @Override            public void onGetNotificationStatus(int i, int i1) {            }        });        HeytapPushManager.requestNotificationPermission();    }    public static void putRegId(String accessToken, String regId) {        Log.d(TAG, "putRegId() called with: accessToken = [" + accessToken + "], regId = [" + regId + "]");        String at = accessToken;        if (at == null) {            Reporter.post("access token is null");        } else {            HttpUtils.post()                    .url(CoreManager.requireConfig(MyApplication.getInstance()).configOp)                    .params("packageName", BuildConfig.APPLICATION_ID)                    .params("pushId", regId)                    .params("access_token", at)                    // devicesId后端没有用上，但是沿用旧接口的参数列表带上这个，实际没用，                    .params("deviceId", "6")                    .build()                    .execute(new BaseCallback<Void>(Void.class) {                        @Override                        public void onResponse(ObjectResult<Void> result) {                            Log.i("push", "上传oppo推送Id成功");                        }                        @Override                        public void onError(Call call, Exception e) {                            Reporter.post("上传谷oppo推送Id失败，", e);                        }                    });        }    }}